#----------------------------------------------------------------------------
#
# top-level makefile
#
# Tom Peterka
# Argonne National Laboratory
# 9700 S. Cass Ave.
# Argonne, IL 60439
# tpeterka@mcs.anl.gov
#
# All rights reserved. May not be used, modified, or copied
# without permission
#
#----------------------------------------------------------------------------
# @configure_input@

# the way to use the options set by configure is to include them below
include config_defs

# otherwise, the way to set user options when configure is not used is to
# edit user_defs.mk manually and then include it below
#include user_defs.mk

include system_defs.mk

default: check

Makefile: Makefile.in config.status
	./config.status $@

config.status: configure
	./config.status --recheck

check: FORCE all
	cd diy/src/bil-0.6.0 && $(MAKE)
	cd diy/src/psort && $(MAKE)
	cd diy/src && $(MAKE)
	cd Regular/Parallel && $(MAKE) # regular grid unit test
	cd AMR/Parallel && $(MAKE) # AMR grid unit test

serial_check: serial
	cd Regular/Serial && $(MAKE) clean
	cd Regular/Serial && $(MAKE) sertest
	cd AMR/Serial && $(MAKE) seramrtest
	cd Regular/Serial && $(MAKE) draw

all clean:
	cd diy/src/bil-0.6.0 && $(MAKE) $@
	cd diy/src/psort && $(MAKE) $@
	cd diy/src && $(MAKE) $@
	cd src && $(MAKE) $@ # serial flow library
ifeq ($(GRAPHICS), YES)
	cd renderer/libgcb && $(MAKE) $@ # rendering utilities
	cd renderer && $(MAKE) $@ # rendering library
endif

serial:
	cd src && $(MAKE) clean
	cd src && $(MAKE) SERIAL=YES # serial flow library
ifeq ($(GRAPHICS), YES)
	cd renderer/libgcb && $(MAKE) # rendering utilities
	cd renderer && $(MAKE) # rendering library
endif

install: 
	install -d $(prefix)/osuflow/lib
	install -d $(prefix)/osuflow/include
	install -m 0755 src/libOSUFlow.a $(prefix)/osuflow/lib
	install -m 0755 src/*.h $(prefix)/osuflow/include
	install -m 0755 renderer/librenderer.a $(prefix)/osuflow/lib
	install -m 0755 renderer/*.h $(prefix)/osuflow/include
	install -m 0755 renderer/libgcb/liblibgcb.a $(prefix)/osuflow/lib
	install -m 0755 renderer/libgcb/*.h $(prefix)/osuflow/include

uninstall:
	rm -rf $(prefix)/osuflow

dist: $(distdir).tar.gz

$(distdir).tar.gz: $(distdir)
	tar chof - $(distdir) | gzip -9 -c > $@
	rm -rf $(distdir)

$(distdir):
	mkdir -p $(distdir)/diy
	mkdir -p $(distdir)/AMR/Serial
	mkdir -p $(distdir)/AMR/Parallel
	mkdir -p $(distdir)/Regular/Serial
	mkdir -p $(distdir)/Regular/Parallel
	mkdir -p $(distdir)/src
	mkdir -p $(distdir)/renderer/libgcb
	mkdir -p $(distdir)/renderer/examples
	cp COPYRIGHT $(distdir)
	cp README_INSTALL $(distdir)
	cp Makefile.in $(distdir)
	cp configure $(distdir)
	cp copyright $(distdir)
	cp user_defs.mk $(distdir)
	cp system_defs.mk $(distdir)
	cp AMR/Serial/Makefile.in $(distdir)/AMR/Serial
	cp AMR/Serial/SerAmrDraw.C $(distdir)/AMR/Serial
	cp AMR/Serial/SER_AMR_TEST $(distdir)/AMR/Serial
	cp AMR/Parallel/Makefile.in $(distdir)/AMR/Parallel
	cp AMR/Parallel/MpiAmrDraw.C $(distdir)/AMR/Parallel
	cp AMR/Parallel/MPI_AMR_TEST $(distdir)/AMR/Parallel
	cp Regular/Serial/Makefile.in $(distdir)/Regular/Serial
	cp Regular/Serial/SerDraw.C $(distdir)/Regular/Serial
	cp Regular/Serial/FileDraw.C $(distdir)/Regular/Serial
	cp Regular/Serial/SER_TEST $(distdir)/Regular/Serial
	cp Regular/Parallel/Makefile.in $(distdir)/Regular/Parallel
	cp Regular/Parallel/MpiDraw.C $(distdir)/Regular/Parallel
	cp Regular/Parallel/MPI_TEST $(distdir)/Regular/Parallel
	cp src/Makefile.in $(distdir)/src
	cp src/*.C $(distdir)/src
	cp src/*.h $(distdir)/src
	cp renderer/libgcb/Makefile.in $(distdir)/renderer/libgcb
	cp renderer/libgcb/*.cpp $(distdir)/renderer/libgcb
	cp renderer/libgcb/*.h $(distdir)/renderer/libgcb
	cp renderer/examples/Makefile.in $(distdir)/renderer/examples
	cp renderer/examples/*.cpp $(distdir)/renderer/examples
	cp renderer/Makefile.in $(distdir)/renderer
	cp renderer/*.cpp $(distdir)/renderer
	cp renderer/*.h $(distdir)/renderer
	mkdir -p $(distdir)/diy/lib
	mkdir -p $(distdir)/diy/include
	mkdir -p $(distdir)/diy/src
	mkdir -p $(distdir)/diy/src/bil-0.6.0
	mkdir -p $(distdir)/diy/src/bil-0.6.0/examples
	mkdir -p $(distdir)/diy/src/bil-0.6.0/src
	mkdir -p $(distdir)/diy/src/psort
	cp diy/psort/*.c $(distdir)/diy/src/psort
	cp diy/psort/*.h $(distdir)/diy/src/psort
	cp diy/psort/makefile $(distdir)/diy/src/psort
	cp diy/bil-0.6.0/src/*.c $(distdir)/diy/src/bil-0.6.0/src
	cp diy/bil-0.6.0/src/*.h $(distdir)/diy/src/bil-0.6.0/src
	cp diy/bil-0.6.0/examples/*.c $(distdir)/diy/src/bil-0.6.0/examples
	cp diy/bil-0.6.0/examples/*.h $(distdir)/diy/src/bil-0.6.0/examples
	cp diy/bil-0.6.0/examples/makefile $(distdir)/diy/src/bil-0.6.0/examples
	cp diy/bil-0.6.0/examples/README $(distdir)/diy/src/bil-0.6.0/examples
	cp diy/bil-0.6.0/AUTHORS $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/COPYING $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/INSTALL $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/Makefile.am $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/Makefile.in $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/NEWS $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/README $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/configure $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/install-sh $(distdir)/diy/src/bil-0.6.0
	cp diy/bil-0.6.0/libbil.a $(distdir)/diy/src/bil-0.6.0
	cp COPYRIGHT $(distdir)
	cp README $(distdir)
	cp makefile.in $(distdir)
	cp configure $(distdir)
	cp install.sh $(distdir)
	cp lib/libdiy.a $(distdir)/lib
	cp include/*.h $(distdir)/include
	cp src/*.cpp $(distdir)/src

distcheck: $(distdir).tar.gz
	gzip -cd $(distdir).tar.gz | tar xvf -
	cd $(distdir) && ./configure
	cd $(distdir) && $(MAKE) all
	cd $(distdir) && $(MAKE) clean
	rm -rf $(distdir)
	echo "*** Package $(distdir).tar.gz is ready for distribution"

FORCE:
	cd Regular/Parallel && $(MAKE) clean
	cd AMR/Parallel && $(MAKE) clean
	cd diy/src/psort && $(MAKE) clean
	cd diy/src/bil-0.6.0 && $(MAKE) clean

.PHONY: FORCE all clean check dist distcheck install uninstall
